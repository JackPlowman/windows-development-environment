name: "Code Checks"

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]
  schedule:
    - cron: "0 0 * * *"

permissions:
  contents: read
  packages: read

jobs:
  check-code-quality:
    name: Check Code Quality
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      # Lint and Format everything
      - name: Lint Code Base
        uses: super-linter/super-linter/slim@4e8a7c2bf106c4c766c816b35ec612638dc9b6b2 # v7.3.0
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINTER_RULES_PATH: .github/super-linter-configurations
          YAML_ERROR_ON_WARNING: true
          FILTER_REGEX_EXCLUDE: development-environment/.bash*
          VALIDATE_BASH_EXEC: false
          EDITORCONFIG_FILE_NAME: .editorconfig-checker.json

  check-markdown-links:
    name: Check Markdown links
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Check Markdown links
        uses: UmbrellaDocs/action-linkspector@a0567ce1c7c13de4a2358587492ed43cab5d0102 # v1.3.4
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          config_file: .github/other-configurations/.linkspector.yml
          reporter: github-pr-review
          fail_on_error: true
          filter_mode: nofilter
          show_stats: true

  check-justfile-format:
    name: Check Justfile Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Set up Just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3.0.0
      - name: Check Justfile Format
        run: just --shell sh format-check

  run-zizmor:
    name: Check GitHub Actions with zizmor
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@0c5e2b8115b80b4c7c5ddf6ffdd634974642d182 # v5.4.1
        with:
          version: "latest"
      - name: Run zizmor ðŸŒˆ
        run: uvx zizmor --format sarif . > results.sarif
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3.28.17
        with:
          sarif_file: results.sarif
          category: zizmor

  lefthook-validate:
    name: Lefthook Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@0c5e2b8115b80b4c7c5ddf6ffdd634974642d182 # v5.4.1
        with:
          version: "latest"
      - name: Run Lefthook Validate
        run: uvx lefthook validate

  run-codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3.28.17
        with:
          languages: actions
          queries: security-and-quality
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3.28.17
